=== detalhes.jsp ===
    - Alterar as expressions do java na página

    <header id="product-highlight" class="clearfix">
        <div id="product-overview" class="container">
            <img itemprop="image" width="280px" height="395px" src="http://cdn.shopify.com/s/files/1/0155/7645/products/css-eficiente-featured_large.png?v=1435245145" class="product-featured-image" />

            <h1 class="product-title" itemprop="name">
            ${produto.titulo} 
            </h1>
            <p class="product-author">
            <span class="product-author-link">

        </span>
        </p>

        <p itemprop="description" class="book-description">${produto.descricao }</p>

            </div>
    </header>

     <form action="/carrinho/add" method="post" class="container">
        <ul id="variants" class="clearfix">
            <input type="hidden" name="produtoId" value="${produto.id}" />
            <c:forEach items="${produto.precos}" var="preco">
                <li class="buy-option">
                    <input type="radio" name="tipo" class="variant-radio" id="tipo" value="${preco.tipo}"  checked="checked"  />
                    <label  class="variant-label">
                    ${preco.tipo} 
                    </label>
                    <small class="compare-at-price">R$ 39,90</small>
                    <p class="variant-price">${preco.valor}</p>
                </li>
            </c:forEach>          
        </ul>
        <button type="submit" class="submit-image icon-basket-alt" alt="Compre Agora" title="Compre Agora${produto.titulo}"></button>
    </form>

    <section class="data product-detail">
        <h2 class="section-title">Dados do livro:</h2>
        <p>Número de páginas: <span>${produto.paginas}</span></p>
        <p></p>
        <p>Data de publicação: ${produto.dataLancamento}</p>
        <p>Encontrou um erro? <a href='/submissao-errata' target='_blank'>Submeta uma errata</a></p>
    </section>

=== ProdutosController ===
    - Mapear a página.
    @RequestMapping("/detalhe/{id}")  // url amigágvel
    public ModelAndView detalhe(@PathVariable("id") Integer id){
        ModelAndView modelAndView = new ModelAndView("/produtos/detalhe");
        Produto produto = produtoDao.find(id);
        modelAndView.addObject("produto", produto);
        return modelAndView;
    }

=== ProdutoDAO ===
    - criar o método find com o id como parâmetro.
    public Produto find(int id){
        return manager.createQuery("select distinct(p) from Produto p join fetch p.precos precos where p.id = :id", Produto.class).setParameter("id", id).getSingleResult();
    }

=== lista.jsp ===
    - importe a biblioteca: <%@ taglib uri="http://www.springframework.org/tags" prefix="s" %>

    <a href="${s:mvcUrl('PC#detalhe').arg(0, produto.id).build()}">${produto.titulo}</a>