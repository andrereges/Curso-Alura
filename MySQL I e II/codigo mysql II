exists(), not exists() - existe? -> true or false
now() -> agora
interval 18 month -> intervalo de 18 meses.
like, not like %joao%
unaccent() - ignora os acentos na palavra
having - serve para filtrar valores de funções de agregação.
distinct - não repete o valor da coluna
IN - serve para selecionar mais de um valor no where m.tipo in('PAGA_PJ', 'PAGA_PF'), ao invés de varios OR;
join e inner join = mostram por padrão a combinação de dados das duas colunas.
right join e left join = junta com a tabela da esquerda ou direita tendo ou não dados.

where é excutado antes do join.

select a.nome, c.nome from aluno a join matricula m on m.aluno_id = a.id join curso c on m.curso_id = c.id;
select a. nome from aluno a where exists(select m.id from matricula m where m.aluno_id = a.id); - exists or not exists
select a. nome from aluno a where exists(select m.id from matricula m where m.aluno_id = a.id and m.data > now() - interval 18 month);
select * from alunos limit 0,2 - limite (apartir de que linha, até qual linha.)
select distinct tipo from matricula;

select c.nome as 'Nome dos Curso', truncate(round(avg(n.nota),2), 2) as 'Media das Notas' from nota n  
	join resposta r on r.id = n.resposta_id  
		join exercicio e on e.id = r.exercicio_id  
			join secao s on s.id = e.secao_id  
				join curso c on c.id = s.curso_id  
					group by c.nome
						order by c.nome asc;

select a.nome, avg(n1.nota) as media, 
avg(n1.nota) - (select avg(n2.nota) from nota n2) as diferenca
from nota n1
join resposta r on r.id = n1.resposta_id
join exercicio e on e.id = r.exercicio_id
join secao s on s.id = e.secao_id
join aluno a on a.id = r.aluno_id
where 
a.id in (select aluno_id from matricula where data > now() - interval 3 month)
group by a.nome;

select a.nome, r.resposta_dada from aluno a left join resposta r on r.aluno = a.id and r.exercicio_id = 1;

